{"ast":null,"code":"import { Scene, PerspectiveCamera, DirectionalLight, Mesh, MeshBasicMaterial, Vector3, PCFSoftShadowMap, Color, Group, BoxGeometry, CapsuleGeometry, SphereGeometry, CircleGeometry, ConeGeometry, Clock, WebGLRenderer, TextureLoader, BufferGeometry, BufferAttribute, CylinderGeometry, MeshPhongMaterial, DoubleSide, AmbientLight, PointLight, PlaneGeometry } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport GUI from 'lil-gui';\n\nclass WebGLApp {\n  constructor(parent) {\n    this.mousemove = (clientX, clientY) => {\n      this.cursor.x = clientX / window.innerWidth - 0.5;\n      this.cursor.y = -(clientY / window.innerHeight - 0.5);\n    };\n\n    this.animate = () => {\n      // console.log(this.cursor.x);\n      this.eye_R.rotation.y = Math.sin(this.cursor.x * Math.PI * 2);\n      this.eye_R.rotation.x = Math.cos(this.cursor.y * Math.PI * 2);\n      console.log(this.eye_R.rotation.y);\n      this.eye_L.rotation.y = Math.sin(this.cursor.x * Math.PI * 2);\n      this.eye_L.rotation.x = Math.cos(this.cursor.y * Math.PI * 2);\n      this.arm_L.rotation.x = Math.sin(this.cursor.x * Math.PI);\n      this.arm_R.rotation.x = -Math.sin(this.cursor.x * Math.PI); // this.arm_L.rotation.y = Math.cos(this.cursor.x * Math.PI * 2) \n\n      this.leg_L.rotation.x = Math.sin(this.cursor.x * Math.PI * 0.3);\n      this.leg_R.rotation.x = -Math.sin(this.cursor.x * Math.PI * 0.3);\n      this.dress.rotation.z = -Math.sin(this.cursor.x * Math.PI * 0.05);\n      this.face.position.x = -Math.sin(this.cursor.x * Math.PI * 0.05);\n      this.hair.rotation.z = -Math.sin(this.cursor.x * Math.PI * 0.05);\n      this.renderer.render(this.scene, this.camera);\n      requestAnimationFrame(this.animate);\n      this.controls.update();\n    };\n\n    this.resize = (width, height) => {\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(width, height);\n    };\n\n    this.addLights = () => {\n      this.createAmbientLight();\n      this.createPointLight();\n    };\n\n    this.createAmbientLight = () => {\n      this.ambientLight = new AmbientLight(0x999999, 1);\n      this.scene.add(this.ambientLight);\n    };\n\n    this.createPointLight = () => {\n      this.light = new PointLight(0xffffff, 0.3, 0);\n      this.light.castShadow = true;\n      this.light.shadow.mapSize.width = 5000;\n      this.light.shadow.mapSize.height = 5000;\n      this.light.position.set(0, 20, -5);\n      this.scene.add(this.light);\n      const light = new PointLight(0xffffff, 0.2, 0);\n      light.castShadow = false;\n      light.position.set(0, 30, 50);\n      this.scene.add(light);\n    };\n\n    this.makeScene = () => {\n      this.addLights(); //materials\n      // const skinMaterial = new MeshBasicMaterial({ color: 0xd1aa89 })\n      // const dressMaterial = new MeshBasicMaterial({ color: 0xfdff7a })\n\n      const skinMaterial = new MeshPhongMaterial({\n        color: 0xd1aa89,\n        flatShading: true\n      });\n      const dressMaterial = new MeshPhongMaterial({\n        color: 0xfdff7a,\n        flatShading: true\n      });\n      const blackMaterial = new MeshPhongMaterial({\n        color: 0x000000,\n        flatShading: true\n      });\n      const texture = new TextureLoader().load('assets/textures/Vector.jpg');\n      const eyeWhite = new MeshBasicMaterial({\n        map: texture\n      }); //facial\n\n      this.face = this.makeGeometry('sphere', [1.2, 32, 16], skinMaterial);\n      this.face.position.set(0, 0.5, 0);\n      this.scene.add(this.face); //EYES - sphere\n\n      this.eye_L = this.makeGeometry('sphere', [0.25, 32, 16], eyeWhite);\n      this.eye_L.position.set(0.35, 0.5, 1.1);\n      this.eye_R = this.makeGeometry('sphere', [0.25, 32, 16], eyeWhite);\n      this.eye_R.position.set(-0.35, 0.5, 1.1); // //eyes_white\n\n      this.scene.add(this.eye_L, this.eye_R); //dress\n\n      this.dress = this.makeGeometry('cone', [1.4, 2.5, 32], dressMaterial);\n      this.dress.position.set(0, -2, 0);\n      this.dress.castShadow = true;\n      this.scene.add(this.dress); //arms\n\n      this.arm_L = this.makeGeometry('capsule', [0.2, 1, 10], skinMaterial);\n      this.arm_L.position.set(-1.5, -1.74, 0);\n      this.arm_L.rotation.set(-0.4, -0.2, -1.7);\n      this.arm_R = this.makeGeometry('capsule', [0.2, 1, 10], skinMaterial);\n      this.arm_R.position.set(1.5, -1.74, 0);\n      this.arm_R.rotation.set(-0.4, -0.2, 1.7);\n      this.arm_L.castShadow = true;\n      this.arm_R.castShadow = true;\n      this.scene.add(this.arm_R, this.arm_L); //legs\n\n      this.leg_R = this.makeGeometry('capsule', [0.2, 2, 10], skinMaterial);\n      this.leg_R.position.set(-0.5, -4.5, 0);\n      this.leg_L = this.makeGeometry('capsule', [0.2, 2, 10], skinMaterial);\n      this.leg_L.position.set(0.5, -4.5, 0);\n      this.leg_L.castShadow = true;\n      this.leg_R.castShadow = true;\n      this.scene.add(this.leg_R, this.leg_L); //hair\n\n      this.hair_top = this.makeGeometry('cone', [1.6, 0.7, 32], blackMaterial);\n      this.hair_top.position.set(0, 1.5, 0); // this.scene.add(this.hair_top)\n      //hair\n\n      this.hair_back = this.makeGeometry('cylinder', [1.6, 2, 2.4, 32], blackMaterial);\n      this.hair_back.position.set(0, 0, 0);\n      this.hair_back.rotation.set(0, Math.PI / 2, 0); // this.scene.add(this.hair)\n      //ground\n\n      const ground = new Mesh(new PlaneGeometry(10, 38), new MeshPhongMaterial({\n        //0xc1d5e1\n        color: 0xc1d5e1,\n        flatShading: true\n      }));\n      ground.position.set(0, -5, -8);\n      ground.rotation.set(-Math.PI / 2.2, 0, 0);\n      ground.receiveShadow = true;\n      this.scene.add(ground); //GUI\n      //Debug Controls\n\n      const gui = new GUI(); //objects\n\n      this.makeGUI(gui, \"face\", this.face);\n      this.makeGUI(gui, \"dress\", this.dress);\n      this.makeGUI(gui, \"leg_Right\", this.leg_R);\n      this.makeGUI(gui, \"leg_Left\", this.leg_L);\n      this.makeGUI(gui, \"arm_Left\", this.arm_L);\n      this.makeGUI(gui, \"arm_Right\", this.arm_R);\n      this.makeGUI(gui, \"eye_R\", this.eye_R); // this.makeGUI(gui, \"sclera_R\", this.sclera_R)\n      //scene\n\n      gui.addColor(this.params, 'backgroundColor').onChange(() => {\n        this.scene.background.set(this.params.backgroundColor);\n      });\n      gui.close(); //hair\n\n      const geometry = new BufferGeometry(); // create a simple square shape. We duplicate the top left and bottom right\n      // vertices because each vertex needs to appear once per triangle.\n\n      const vertices = new Float32Array([-2, -1.2, 1.0, 2, -1.2, 1.0, 1.55, 1.2, 1.0, 1.55, 1.2, 1, //1.6, 2, 2.4\n      -1.55, 1.2, 1.0, -2.0, -1.2, 1.0]); // itemSize = 3 because there are 3 values (components) per vertex\n\n      geometry.setAttribute('position', new BufferAttribute(vertices, 3));\n      const hair_front = new Mesh(geometry, blackMaterial);\n      hair_front.position.set(0, -0, -1.1); //  this.scene.add(hair_front)\n      // this.hair_back.castShadow = true\n      // this.hair_top.castShadow = true\n      // hair_front.castShadow = true\n\n      this.hair = new Group();\n      this.hair.add(this.hair_back, this.hair_top, hair_front);\n      this.scene.add(this.hair);\n    };\n\n    this.makeClouds = () => {//  const cloud_1 = this.makeGeometry('sphere', [0.25,32,16], eyeWhite))\n    };\n\n    this.makeGUI = (gui, folderName, obj) => {\n      //gui face\n      const objGUI = gui.addFolder(folderName);\n      objGUI.add(obj.position, 'x').min(-10).max(10).step(0.01);\n      objGUI.add(obj.position, 'y').min(-10).max(10).step(0.01);\n      objGUI.add(obj.position, 'z').min(-Math.PI).max(Math.PI).step(0.01);\n      objGUI.add(obj.rotation, 'x').min(-Math.PI).max(Math.PI).step(0.01).name('rotX');\n      objGUI.add(obj.rotation, 'y').min(-Math.PI).max(Math.PI).step(0.01).name('rotY');\n      objGUI.add(obj.rotation, 'z').min(-Math.PI).max(Math.PI).step(0.01).name('rotZ');\n      objGUI.addColor(this.params, 'color').onChange(() => {\n        obj.material.color.set(this.params.color);\n      });\n      objGUI.close();\n    };\n\n    this.makeGeometry = (name, params, material) => {\n      let geometry; // eslint-disable-next-line default-case\n\n      switch (name) {\n        case \"cube\":\n          geometry = new Mesh(new BoxGeometry(params[0], params[1], params[2]), // width height depth\n          material);\n          break;\n\n        case \"sphere\":\n          geometry = new Mesh(new SphereGeometry(params[0], params[1], params[2]), // radius height segs depth segs\n          material);\n          break;\n\n        case \"cone\":\n          geometry = new Mesh(new ConeGeometry(params[0], params[1], params[2]), // radius height radial segs\n          material);\n          break;\n\n        case \"capsule\":\n          geometry = new Mesh(new CapsuleGeometry(params[0], params[1], params[2], 32), // radius len cap-divisions rad-segs\n          material);\n          break;\n\n        case \"circle\":\n          geometry = new Mesh(new CircleGeometry(params[0], 32), // radius segs\n          material);\n          break;\n\n        case \"cylinder\":\n          geometry = new Mesh(new CylinderGeometry(params[0], params[1], params[2], params[3], 1, false, 0, Math.PI), //radiusTop : Float, radiusBottom : Float, height : Float, radialSegments\n          material);\n          break;\n      } //this.scene.add(box);\n\n\n      return geometry;\n    };\n\n    //the main function\n    this.params = {\n      color: 0xff0000,\n      backgroundColor: 0xe2f0f9\n    };\n    const aspect = window.innerWidth / window.innerHeight; // const clock = new Clock()\n    //set up scene\n\n    this.scene = new Scene();\n    this.scene.background = new Color(this.params.backgroundColor);\n    this.camera = new PerspectiveCamera(75, aspect, 0.1, 1000);\n    this.renderer = new WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = PCFSoftShadowMap;\n    this.scene.add(this.camera);\n    this.camera.position.z = 10; // controls\n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement); // this.resize(window.innerWidth, window.innerHeight)\n\n    this.cursor = {\n      x: 0,\n      y: 0\n    };\n    parent.appendChild(this.renderer.domElement);\n    this.makeScene();\n    this.animate();\n  }\n\n}\n\nexport default WebGLApp;","map":{"version":3,"sources":["/Users/amnaazhar/Desktop/threejs-journey/chapters/chapter2-flowfields/src/webglapp.js"],"names":["Scene","PerspectiveCamera","DirectionalLight","Mesh","MeshBasicMaterial","Vector3","PCFSoftShadowMap","Color","Group","BoxGeometry","CapsuleGeometry","SphereGeometry","CircleGeometry","ConeGeometry","Clock","WebGLRenderer","TextureLoader","BufferGeometry","BufferAttribute","CylinderGeometry","MeshPhongMaterial","DoubleSide","AmbientLight","PointLight","PlaneGeometry","OrbitControls","GUI","WebGLApp","constructor","parent","mousemove","clientX","clientY","cursor","x","window","innerWidth","y","innerHeight","animate","eye_R","rotation","Math","sin","PI","cos","console","log","eye_L","arm_L","arm_R","leg_L","leg_R","dress","z","face","position","hair","renderer","render","scene","camera","requestAnimationFrame","controls","update","resize","width","height","aspect","updateProjectionMatrix","setSize","addLights","createAmbientLight","createPointLight","ambientLight","add","light","castShadow","shadow","mapSize","set","makeScene","skinMaterial","color","flatShading","dressMaterial","blackMaterial","texture","load","eyeWhite","map","makeGeometry","hair_top","hair_back","ground","receiveShadow","gui","makeGUI","addColor","params","onChange","background","backgroundColor","close","geometry","vertices","Float32Array","setAttribute","hair_front","makeClouds","folderName","obj","objGUI","addFolder","min","max","step","name","material","antialias","shadowMap","enabled","type","domElement","appendChild"],"mappings":"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","sourcesContent":["import{\n    Scene,\n    PerspectiveCamera,\n    DirectionalLight,\n    Mesh,\n    MeshBasicMaterial,\n    Vector3,\n    PCFSoftShadowMap,\n    Color,\n    Group,\n    BoxGeometry,\n    CapsuleGeometry,\n    SphereGeometry,\n    CircleGeometry,\n    ConeGeometry,\n    Clock,\n    WebGLRenderer,\n    TextureLoader,\n    BufferGeometry,\n    BufferAttribute,\n    CylinderGeometry,\n    MeshPhongMaterial,\n    DoubleSide,\n    AmbientLight,\n    PointLight,\n    PlaneGeometry\n} from 'three'\n\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport GUI from 'lil-gui'; \n\nclass WebGLApp {\n\n    constructor(parent){\n        \n        //the main function\n        this.params = {\n            color: 0xff0000,\n            backgroundColor: 0xe2f0f9\n        }\n        const aspect = window.innerWidth / window.innerHeight\n       // const clock = new Clock()\n        //set up scene\n        this.scene = new Scene()\n        this.scene.background = new Color(this.params.backgroundColor);\n        this.camera = new PerspectiveCamera(75, aspect, 0.1, 1000)\n\n        this.renderer = new WebGLRenderer({antialias:true})\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = PCFSoftShadowMap;\n\n        this.scene.add( this.camera )\n        this.camera.position.z = 10\n\n        // controls\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n       // this.resize(window.innerWidth, window.innerHeight)\n       this.cursor = {\n            x: 0,\n            y: 0\n        }\n\n        parent.appendChild(this.renderer.domElement)\n        this.makeScene()\n        this.animate()\n\n    }\n    mousemove = (clientX, clientY) => {\n        this.cursor.x = clientX / window.innerWidth - 0.5\n        this.cursor.y = - (clientY / window.innerHeight - 0.5)\n        \n    }\n    animate = () => {\n        // console.log(this.cursor.x);\n        this.eye_R.rotation.y = Math.sin(this.cursor.x * Math.PI * 2) \n        this.eye_R.rotation.x = Math.cos(this.cursor.y * Math.PI * 2)\n        console.log(this.eye_R.rotation.y)\n\n        this.eye_L.rotation.y = Math.sin(this.cursor.x * Math.PI * 2) \n        this.eye_L.rotation.x = Math.cos(this.cursor.y * Math.PI * 2) \n\n        this.arm_L.rotation.x = Math.sin(this.cursor.x * Math.PI)\n        this.arm_R.rotation.x = -Math.sin(this.cursor.x * Math.PI) \n       // this.arm_L.rotation.y = Math.cos(this.cursor.x * Math.PI * 2) \n        this.leg_L.rotation.x = Math.sin(this.cursor.x * Math.PI * 0.3)\n        this.leg_R.rotation.x = -Math.sin(this.cursor.x * Math.PI * 0.3) \n\n        this.dress.rotation.z = -Math.sin(this.cursor.x * Math.PI * 0.05) \n        this.face.position.x = -Math.sin(this.cursor.x * Math.PI * 0.05) \n\n        this.hair.rotation.z = -Math.sin(this.cursor.x * Math.PI * 0.05) \n\n\n        this.renderer.render( this.scene, this.camera )\n        requestAnimationFrame( this.animate )\n        this.controls.update();\n    }\n\n    resize = (width, height) => {\n        this.camera.aspect = width / height\n        this.camera.updateProjectionMatrix()\n        this.renderer.setSize(width, height)\n        \n    }\n\n    addLights= () =>{\n        this.createAmbientLight();\n        this.createPointLight();\n    }\n\n    createAmbientLight = () => {\n        this.ambientLight = new AmbientLight(0x999999, 1);\n        this.scene.add(this.ambientLight);\n    };\n    \n    createPointLight = () => {\n        this.light = new PointLight(0xffffff, 0.3, 0);\n        this.light.castShadow = true;\n        this.light.shadow.mapSize.width = 5000;\n        this.light.shadow.mapSize.height = 5000;\n        this.light.position.set(0,20,-5);\n        this.scene.add(this.light);\n\n        const light = new PointLight(0xffffff, 0.2, 0);\n        light.castShadow = false;\n        light.position.set(0,30,50);\n        this.scene.add(light);\n    };\n\n    makeScene = () => {\n\n        this.addLights()\n\n        //materials\n        // const skinMaterial = new MeshBasicMaterial({ color: 0xd1aa89 })\n        // const dressMaterial = new MeshBasicMaterial({ color: 0xfdff7a })\n        const skinMaterial = new MeshPhongMaterial({\n            color: 0xd1aa89,\n            flatShading: true,\n        });\n        const dressMaterial = new MeshPhongMaterial({\n            color: 0xfdff7a,\n            flatShading: true\n        });\n        const blackMaterial = new MeshPhongMaterial({\n            color: 0x000000,\n            flatShading: true,\n        });\n    \n        const texture = new TextureLoader().load( 'assets/textures/Vector.jpg' );\n        const eyeWhite = new MeshBasicMaterial({ map: texture })\n\n        //facial\n        this.face = this.makeGeometry('sphere', [1.2,32,16], skinMaterial)\n        this.face.position.set(0,0.5,0)\n        this.scene.add(this.face)\n\n        //EYES - sphere\n        this.eye_L = this.makeGeometry('sphere', [0.25,32,16], eyeWhite)\n        this.eye_L.position.set(0.35, 0.5, 1.1)\n        this.eye_R = this.makeGeometry('sphere', [0.25,32,16], eyeWhite)\n        this.eye_R.position.set(-0.35, 0.5, 1.1)\n        // //eyes_white\n\n        this.scene.add(this.eye_L,this.eye_R)\n\n\n        //dress\n        this.dress = this.makeGeometry('cone', [1.4,2.5,32], dressMaterial)\n        this.dress.position.set(0,-2,0)\n        this.dress.castShadow = true\n        this.scene.add(this.dress)\n\n        //arms\n        this.arm_L = this.makeGeometry('capsule', [0.2,1,10], skinMaterial)\n        this.arm_L.position.set(-1.5, -1.74,0)\n        this.arm_L.rotation.set(-0.4, -0.2,-1.7)\n       \n        this.arm_R = this.makeGeometry('capsule', [0.2,1,10], skinMaterial)\n        this.arm_R.position.set(1.5, -1.74,0)\n        this.arm_R.rotation.set(-0.4, -0.2,1.7)\n        this.arm_L.castShadow = true\n        this.arm_R.castShadow = true\n        this.scene.add(this.arm_R, this.arm_L)\n\n        //legs\n        this.leg_R = this.makeGeometry('capsule', [0.2,2,10], skinMaterial)\n        this.leg_R.position.set(-0.5, -4.5,0)\n        \n        this.leg_L = this.makeGeometry('capsule', [0.2,2,10], skinMaterial)\n        this.leg_L.position.set(0.5, -4.5,0)\n\n        this.leg_L.castShadow = true\n        this.leg_R.castShadow = true\n        \n        this.scene.add(this.leg_R, this.leg_L)\n\n        //hair\n        this.hair_top = this.makeGeometry('cone', [1.6, 0.7,32], blackMaterial)\n        this.hair_top.position.set(0,1.5,0)\n       // this.scene.add(this.hair_top)\n\n\n        //hair\n        this.hair_back = this.makeGeometry('cylinder', [1.6, 2, 2.4, 32], blackMaterial)\n        this.hair_back.position.set(0,0,0)\n        this.hair_back.rotation.set(0,Math.PI/2,0)\n       // this.scene.add(this.hair)\n\n       //ground\n       const ground = new Mesh(new PlaneGeometry( 10,38 ), new MeshPhongMaterial({ //0xc1d5e1\n        color: 0xc1d5e1,\n        flatShading: true, }))\n        ground.position.set(0,-5,-8)\n        ground.rotation.set(-Math.PI/2.2,0,0)\n        ground.receiveShadow = true\n        this.scene.add( ground )\n\n\n        //GUI\n        //Debug Controls\n        const gui = new GUI()\n\n        //objects\n        this.makeGUI(gui, \"face\", this.face)\n        this.makeGUI(gui, \"dress\", this.dress)\n        this.makeGUI(gui, \"leg_Right\", this.leg_R)\n        this.makeGUI(gui, \"leg_Left\", this.leg_L)\n        this.makeGUI(gui, \"arm_Left\", this.arm_L)\n        this.makeGUI(gui, \"arm_Right\", this.arm_R)\n        this.makeGUI(gui, \"eye_R\", this.eye_R)\n        // this.makeGUI(gui, \"sclera_R\", this.sclera_R)\n        \n        //scene\n        gui\n        .addColor(this.params, 'backgroundColor')\n        .onChange(()=>{\n            this.scene.background.set(this.params.backgroundColor)\n        })\n\n        gui.close()\n\n        //hair\n\n        const geometry = new BufferGeometry();\n        // create a simple square shape. We duplicate the top left and bottom right\n        // vertices because each vertex needs to appear once per triangle.\n        const vertices = new Float32Array( [\n            -2, -1.2,  1.0,\n           2, -1.2,  1.0,\n            1.55,  1.2,  1.0,\n       \n            1.55,  1.2,  1, //1.6, 2, 2.4\n           -1.55,  1.2,  1.0,\n           -2.0, -1.2,  1.0\n        ] );\n\n        // itemSize = 3 because there are 3 values (components) per vertex\n        geometry.setAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n        const hair_front = new Mesh( geometry, blackMaterial);\n        hair_front.position.set(0,-0,-1.1)\n      //  this.scene.add(hair_front)\n        // this.hair_back.castShadow = true\n        // this.hair_top.castShadow = true\n        // hair_front.castShadow = true\n\n        this.hair = new Group()\n        this.hair.add( this.hair_back, this.hair_top, hair_front )\n\n        this.scene.add(this.hair)\n\n\n    }\n\n    makeClouds = () => {\n\n\n      //  const cloud_1 = this.makeGeometry('sphere', [0.25,32,16], eyeWhite))\n        \n    }\n\n\n    makeGUI = (gui, folderName, obj) => {\n        //gui face\n        const objGUI = gui.addFolder(folderName);\n        objGUI\n            .add(obj.position,'x')\n            .min(-10)\n            .max(10)\n            .step(0.01)\n        objGUI\n            .add(obj.position,'y')\n            .min(-10)\n            .max(10)\n            .step(0.01)\n        objGUI\n            .add(obj.position,'z')\n            .min(-Math.PI)\n            .max(Math.PI)\n            .step(0.01)\n        objGUI\n            .add(obj.rotation,'x')\n            .min(-Math.PI)\n            .max(Math.PI)\n            .step(0.01)\n            .name('rotX')\n        objGUI\n            .add(obj.rotation,'y')\n            .min(-Math.PI)\n            .max(Math.PI)\n            .step(0.01)\n            .name('rotY')\n        objGUI\n            .add(obj.rotation,'z')\n            .min(-Math.PI)\n            .max(Math.PI)\n            .step(0.01)\n            .name('rotZ')\n        objGUI\n            .addColor(this.params, 'color')\n            .onChange(()=>{\n                obj.material.color.set(this.params.color)\n            })\n        objGUI.close()\n    }\n\n\n    // U T I L I T Y\n\n    //GEOMETRIES\n\n    makeGeometry = (name, params, material) => {\n\n        let geometry;\n        // eslint-disable-next-line default-case\n        switch (name){\n            case \"cube\":\n                geometry = new Mesh(\n                    new BoxGeometry(params[0], params[1], params[2]), // width height depth\n                    material\n                );\n                break\n            case \"sphere\":\n                geometry = new Mesh(\n                    new SphereGeometry(params[0], params[1], params[2]), // radius height segs depth segs\n                    material\n                );\n                break\n            case \"cone\":\n                geometry = new Mesh(\n                    new ConeGeometry(params[0], params[1], params[2]), // radius height radial segs\n                    material\n                );\n                break\n            case \"capsule\":\n                geometry = new Mesh(\n                    new CapsuleGeometry(params[0], params[1], params[2],32), // radius len cap-divisions rad-segs\n                    material\n                );\n                break\n            case \"circle\":\n                geometry = new Mesh(\n                    new CircleGeometry(params[0], 32), // radius segs\n                    material\n                );\n                break\n            case \"cylinder\":\n                geometry = new Mesh(\n                    new CylinderGeometry(params[0],params[1], params[2], params[3], 1, false, 0, Math.PI), //radiusTop : Float, radiusBottom : Float, height : Float, radialSegments\n                    material\n                );\n                break\n        }\n\n        //this.scene.add(box);\n        return geometry\n    }\n\n\n  \n\n}\n\nexport default WebGLApp;"]},"metadata":{},"sourceType":"module"}